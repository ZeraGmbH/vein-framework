@startuml

EventSystem <|-- VfCmdEventHandlerSystem
abstract class EventSystem {
    void sigSendEvent(QEvent *t_event)
    {abstract} void processEvent(QEvent *t_event)
}

class VfCmdEventHandlerSystem {
    void addItem(VfCmdEventItemPtr item)
    void removeItem(VfCmdEventItemPtr item)
    void processEvent(QEvent *event) override
}

VfCmdEventHandlerSystem "1" --> "1" VfCmdEventHandler
VfCmdEventHandler "0" *-- "*" VfCmdEventItem

class VfCmdEventHandler {
    void addItem(VfCmdEventItemPtr item)
    void removeItem(VfCmdEventItemPtr item)
    void processEvent(QEvent *event)
    -QHash<int, SafeDeleteSet> m_items
}

VfCmdEventItem "1" -up-> "1" EventSystem:"call sigSendEvent"
abstract class VfCmdEventItem {
    void setEventSystem(EventSystem* eventSystem)
    int getEntityId()
    {abstract} void processCommandEvent(CommandEvent *cmdEvent)
    {abstract} void processErrorCommandEventData(EventData *originalEventData)
    EventSystem* m_eventSystem
}

VfClientEntitySubscriber -up-|> VfCmdEventItem
'VfCmdEventItem <|-- VfClientEntitySubscriber
class VfClientEntitySubscriber {
    void processCommandEvent(...)
    void processErrorCommandEventData(...)
}

VfClientEntityUnsubscriber -up-|> VfCmdEventItem
class VfClientEntityUnsubscriber {
    void processCommandEvent(...)
    void processErrorCommandEventData(...)
}

class VfCmdEventItemEntity {
    void addItem(VfCmdEventItemComponentPtr item);
    void removeItem(VfCmdEventItemComponentPtr item);
    void processCommandEvent(...)
    void processErrorCommandEventData(...)
    -QHash<QString, SafeDeleteSet> m_componentItems;
}
VfCmdEventItemEntity -up-|> VfCmdEventItem

VfCmdEventItemEntity "0" *-- "*" VfCmdEventItemComponent
abstract class VfCmdEventItemComponent {
    VfCmdEventItemEntityPtr getEntityItem()
    EventSystem* getEvenSystem()
    {abstract} void processComponentEventData(ComponentData *componentData)
    {abstract} void processErrorComponentEventData(ComponentData *originalComponentData)
}

class VfClientComponentFetcher {
    void processComponentEventData(...)
    void processErrorComponentEventData(...)
}
VfClientComponentFetcher -up-|> VfCmdEventItemComponent

class VfClientComponentSetter {
    void processComponentEventData(...)
    void processErrorComponentEventData(...)
}
VfClientComponentSetter -up-|> VfCmdEventItemComponent

class VfComponentChangeNotifier {
    void processComponentEventData(..)
    void processErrorComponentEventData(...)
}
VfComponentChangeNotifier -up-|> VfCmdEventItemComponent

@endum
